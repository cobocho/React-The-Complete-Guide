{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-ee2ff-default-rtdb.firebaseio.com/cart.json\");\n      console.log(response.ok);\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.setItem(cartData));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetcing cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-ee2ff-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.setNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sending cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","console","log","ok","Error","data","json","cartData","setItem","error","setNotification","status","title","message","sendCartData","sendRequest","method","body","JSON","stringify"],"sources":["/Users/admin/Desktop/React/React-The-Complete-Guide/Section19/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-http-ee2ff-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      console.log(response.ok);\n\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n\n      dispatch(cartActions.setItem(cartData));\n    } catch (error) {\n      dispatch(\n        uiActions.setNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetcing cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cartData) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.setNotification({\n        status: \"pending\",\n        title: \"sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-ee2ff-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cartData),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.setNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sending cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.setNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,CACjE;MAEDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,EAAE,CAAC;MAExB,IAAI,CAACJ,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMT,SAAS,EAAE;MAElCD,QAAQ,CAACH,WAAW,CAACc,OAAO,CAACD,QAAQ,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdZ,QAAQ,CACNF,SAAS,CAACe,eAAe,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIP,QAAQ,IAAK;EACxC,OAAO,MAAOV,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACe,eAAe,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAME,WAAW,GAAG,YAAY;MAC9B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEgB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;MAC/B,CAAC,CACF;MAED,IAAI,CAACR,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMW,WAAW,EAAE;MAEnBlB,QAAQ,CACNF,SAAS,CAACe,eAAe,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdZ,QAAQ,CACNF,SAAS,CAACe,eAAe,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}