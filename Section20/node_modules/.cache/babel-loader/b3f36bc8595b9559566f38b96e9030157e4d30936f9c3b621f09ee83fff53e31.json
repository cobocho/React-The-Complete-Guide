{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React/React-The-Complete-Guide/Section20/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { useParams, useRouteMatch } from \"react-router\";\nimport { Route } from \"react-router\";\nimport NoQuoteFound from \"../components/quotes/NoQuotesFound\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { Link } from \"react-router-dom\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteDetail = () => {\n  _s();\n  const {\n    quoteId: id\n  } = useParams();\n  const {\n    sendRequest,\n    data: loadedQuote,\n    status\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest();\n  });\n  const match = useRouteMatch();\n  const quote = DUMMY_QUOTES.find(quote => {\n    return quote.id === id;\n  });\n  if (!quote) return /*#__PURE__*/_jsxDEV(NoQuoteFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.url,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Open Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.url}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"fSvUXwPcuXTemNMLDaKPDqHkzbE=\", false, function () {\n  return [useParams, useHttp, useRouteMatch];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","useParams","useRouteMatch","Route","NoQuoteFound","Comments","HighlightedQuote","Link","useHttp","getSingleQuote","QuoteDetail","quoteId","id","sendRequest","data","loadedQuote","status","match","quote","DUMMY_QUOTES","find","text","author","url"],"sources":["/Users/admin/Desktop/React/React-The-Complete-Guide/Section20/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useParams, useRouteMatch } from \"react-router\";\nimport { Route } from \"react-router\";\nimport NoQuoteFound from \"../components/quotes/NoQuotesFound\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { Link } from \"react-router-dom\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const { quoteId: id } = useParams();\n\n  const {\n    sendRequest,\n    data: loadedQuote,\n    status,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest();\n  });\n\n  const match = useRouteMatch();\n\n  const quote = DUMMY_QUOTES.find((quote) => {\n    return quote.id === id;\n  });\n\n  if (!quote) return <NoQuoteFound />;\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.url} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Open Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.url}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,aAAa,QAAQ,cAAc;AACvD,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,cAAc,QAAQ,YAAY;AAAC;AAE5C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC,OAAO,EAAEC;EAAG,CAAC,GAAGX,SAAS,EAAE;EAEnC,MAAM;IACJY,WAAW;IACXC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGR,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEjCT,SAAS,CAAC,MAAM;IACda,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMI,KAAK,GAAGf,aAAa,EAAE;EAE7B,MAAMgB,KAAK,GAAGC,YAAY,CAACC,IAAI,CAAEF,KAAK,IAAK;IACzC,OAAOA,KAAK,CAACN,EAAE,KAAKA,EAAE;EACxB,CAAC,CAAC;EAEF,IAAI,CAACM,KAAK,EAAE,oBAAO,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA,QAAG;EAEnC,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACG,IAAK;MAAC,MAAM,EAAEH,KAAK,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAEL,KAAK,CAACM,GAAI;MAAC,KAAK;MAAA,uBAC3B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEN,KAAK,CAACM,GAAI,WAAW;UAAA,UAAC;QAEzD;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEN,KAAK,CAACM,GAAI,WAAW;MAAA,uBACnC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GArCIb,WAAW;EAAA,QACST,SAAS,EAM7BO,OAAO,EAMGN,aAAa;AAAA;AAAA,KAbvBQ,WAAW;AAuCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}